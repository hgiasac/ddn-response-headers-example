[
  {
    "name": "https://raw.githubusercontent.com/hasura/ndc-http/main/connector/testdata/jsonplaceholder/swagger.json",
    "$schema": "https://raw.githubusercontent.com/hasura/ndc-http/refs/heads/main/ndc-http-schema/jsonschema/ndc-http-schema.schema.json",
    "settings": {
      "servers": [
        {
          "url": {
            "value": "https://jsonplaceholder.typicode.com",
            "env": "SERVER_URL"
          }
        }
      ],
      "version": "1.0.0"
    },
    "functions": {
      "getAlbums": {
        "request": {
          "url": "/albums",
          "method": "get",
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "headers": {
            "description": "Headers forwarded from the Hasura engine",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            }
          },
          "id": {
            "description": "Filter by album ID",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "name": "id",
              "in": "query",
              "schema": {
                "type": [
                  "integer"
                ]
              }
            }
          },
          "userId": {
            "description": "Filter by user ID",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "name": "userId",
              "in": "query",
              "schema": {
                "type": [
                  "integer"
                ]
              }
            }
          }
        },
        "description": "Get all available albums",
        "result_type": {
          "name": "GetAlbumsHeadersResponse",
          "type": "named"
        }
      },
      "getAlbumsId": {
        "request": {
          "url": "/albums/{id}",
          "method": "get",
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "headers": {
            "description": "Headers forwarded from the Hasura engine",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            }
          },
          "id": {
            "description": "The ID of the album to retrieve",
            "type": {
              "name": "Int32",
              "type": "named"
            },
            "http": {
              "name": "id",
              "in": "path",
              "schema": {
                "type": [
                  "integer"
                ]
              }
            }
          }
        },
        "description": "Get specific album",
        "result_type": {
          "name": "GetAlbumsIdHeadersResponse",
          "type": "named"
        }
      },
      "getAlbumsIdPhotos": {
        "request": {
          "url": "/albums/{id}/photos",
          "method": "get",
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "headers": {
            "description": "Headers forwarded from the Hasura engine",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            }
          },
          "id": {
            "description": "post id",
            "type": {
              "name": "Int32",
              "type": "named"
            },
            "http": {
              "name": "id",
              "in": "path",
              "schema": {
                "type": [
                  "integer"
                ]
              }
            }
          }
        },
        "description": "Get photos for a specific album",
        "result_type": {
          "name": "GetAlbumsIdPhotosHeadersResponse",
          "type": "named"
        }
      },
      "getComment": {
        "request": {
          "url": "/comments/{id}",
          "method": "get",
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "headers": {
            "description": "Headers forwarded from the Hasura engine",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            }
          },
          "id": {
            "description": "The ID of the comment to retrieve",
            "type": {
              "name": "Int32",
              "type": "named"
            },
            "http": {
              "name": "id",
              "in": "path",
              "schema": {
                "type": [
                  "integer"
                ]
              }
            }
          }
        },
        "description": "Get specific comment",
        "result_type": {
          "name": "GetCommentHeadersResponse",
          "type": "named"
        }
      },
      "getComments": {
        "request": {
          "url": "/comments",
          "method": "get",
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "headers": {
            "description": "Headers forwarded from the Hasura engine",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            }
          },
          "id": {
            "description": "Filter by comment ID",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "name": "id",
              "in": "query",
              "schema": {
                "type": [
                  "integer"
                ]
              }
            }
          },
          "postId": {
            "description": "Filter by post ID",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "name": "postId",
              "in": "query",
              "schema": {
                "type": [
                  "integer"
                ]
              }
            }
          }
        },
        "description": "Get all available comments",
        "result_type": {
          "name": "GetCommentsHeadersResponse",
          "type": "named"
        }
      },
      "getPhoto": {
        "request": {
          "url": "/photos/{id}",
          "method": "get",
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "headers": {
            "description": "Headers forwarded from the Hasura engine",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            }
          },
          "id": {
            "description": "The ID of the photo to retrieve",
            "type": {
              "name": "Int32",
              "type": "named"
            },
            "http": {
              "name": "id",
              "in": "path",
              "schema": {
                "type": [
                  "integer"
                ]
              }
            }
          }
        },
        "description": "Get specific photo",
        "result_type": {
          "name": "GetPhotoHeadersResponse",
          "type": "named"
        }
      },
      "getPhotos": {
        "request": {
          "url": "/photos",
          "method": "get",
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "albumId": {
            "description": "Filter by album ID",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "name": "albumId",
              "in": "query",
              "schema": {
                "type": [
                  "integer"
                ]
              }
            }
          },
          "headers": {
            "description": "Headers forwarded from the Hasura engine",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            }
          },
          "id": {
            "description": "Filter by photo ID",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "name": "id",
              "in": "query",
              "schema": {
                "type": [
                  "integer"
                ]
              }
            }
          }
        },
        "description": "Get all available photos",
        "result_type": {
          "name": "GetPhotosHeadersResponse",
          "type": "named"
        }
      },
      "getPostById": {
        "request": {
          "url": "/posts/{id}",
          "method": "get",
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "headers": {
            "description": "Headers forwarded from the Hasura engine",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            }
          },
          "id": {
            "description": "The ID of the post to retrieve",
            "type": {
              "name": "Int32",
              "type": "named"
            },
            "http": {
              "name": "id",
              "in": "path",
              "schema": {
                "type": [
                  "integer"
                ]
              }
            }
          }
        },
        "description": "Get specific post",
        "result_type": {
          "name": "GetPostByIdHeadersResponse",
          "type": "named"
        }
      },
      "getPosts": {
        "request": {
          "url": "/posts",
          "method": "get",
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "headers": {
            "description": "Headers forwarded from the Hasura engine",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            }
          },
          "id": {
            "description": "Filter by post ID",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "name": "id",
              "in": "query",
              "schema": {
                "type": [
                  "integer"
                ]
              }
            }
          },
          "userId": {
            "description": "Filter by user ID",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "name": "userId",
              "in": "query",
              "schema": {
                "type": [
                  "integer"
                ]
              }
            }
          }
        },
        "description": "Get all available posts",
        "result_type": {
          "name": "GetPostsHeadersResponse",
          "type": "named"
        }
      },
      "getPostsIdComments": {
        "request": {
          "url": "/posts/{id}/comments",
          "method": "get",
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "headers": {
            "description": "Headers forwarded from the Hasura engine",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            }
          },
          "id": {
            "description": "post id",
            "type": {
              "name": "Int32",
              "type": "named"
            },
            "http": {
              "name": "id",
              "in": "path",
              "schema": {
                "type": [
                  "integer"
                ]
              }
            }
          }
        },
        "description": "Get comments for a specific post",
        "result_type": {
          "name": "GetPostsIdCommentsHeadersResponse",
          "type": "named"
        }
      },
      "getTodo": {
        "request": {
          "url": "/todos/{id}",
          "method": "get",
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "headers": {
            "description": "Headers forwarded from the Hasura engine",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            }
          },
          "id": {
            "description": "The ID of the todo to retrieve",
            "type": {
              "name": "Int32",
              "type": "named"
            },
            "http": {
              "name": "id",
              "in": "path",
              "schema": {
                "type": [
                  "integer"
                ]
              }
            }
          }
        },
        "description": "Get specific todo",
        "result_type": {
          "name": "GetTodoHeadersResponse",
          "type": "named"
        }
      },
      "getTodos": {
        "request": {
          "url": "/todos",
          "method": "get",
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "headers": {
            "description": "Headers forwarded from the Hasura engine",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            }
          },
          "id": {
            "description": "Filter by todo ID",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "name": "id",
              "in": "query",
              "schema": {
                "type": [
                  "integer"
                ]
              }
            }
          },
          "userId": {
            "description": "Filter by user ID",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "name": "userId",
              "in": "query",
              "schema": {
                "type": [
                  "integer"
                ]
              }
            }
          }
        },
        "description": "Get all available todos",
        "result_type": {
          "name": "GetTodosHeadersResponse",
          "type": "named"
        }
      },
      "getUser": {
        "request": {
          "url": "/users/{id}",
          "method": "get",
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "headers": {
            "description": "Headers forwarded from the Hasura engine",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            }
          },
          "id": {
            "description": "The ID of the user to retrieve",
            "type": {
              "name": "Int32",
              "type": "named"
            },
            "http": {
              "name": "id",
              "in": "path",
              "schema": {
                "type": [
                  "integer"
                ]
              }
            }
          }
        },
        "description": "Get specific user",
        "result_type": {
          "name": "GetUserHeadersResponse",
          "type": "named"
        }
      },
      "getUsers": {
        "request": {
          "url": "/users",
          "method": "get",
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "email": {
            "description": "Filter by user email address",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "name": "email",
              "in": "query",
              "schema": {
                "type": [
                  "integer"
                ]
              }
            }
          },
          "headers": {
            "description": "Headers forwarded from the Hasura engine",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            }
          },
          "id": {
            "description": "Filter by user ID",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int32",
                "type": "named"
              }
            },
            "http": {
              "name": "id",
              "in": "query",
              "schema": {
                "type": [
                  "integer"
                ]
              }
            }
          }
        },
        "description": "Get all available users",
        "result_type": {
          "name": "GetUsersHeadersResponse",
          "type": "named"
        }
      }
    },
    "object_types": {
      "Album": {
        "fields": {
          "id": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ],
              "format": "int64"
            }
          },
          "title": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "userId": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ],
              "format": "int64"
            }
          }
        },
        "xml": {
          "name": "Album"
        }
      },
      "Comment": {
        "fields": {
          "body": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "email": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ],
              "format": "email"
            }
          },
          "id": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ],
              "format": "int64"
            }
          },
          "name": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "postId": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ],
              "format": "int64"
            }
          }
        },
        "xml": {
          "name": "Comment"
        }
      },
      "CreatePostHeadersResponse": {
        "fields": {
          "headers": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            }
          },
          "response": {
            "type": {
              "name": "Post",
              "type": "named"
            }
          }
        }
      },
      "DeletePostByIdHeadersResponse": {
        "fields": {
          "headers": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            }
          },
          "response": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Boolean",
                "type": "named"
              }
            }
          }
        }
      },
      "GetAlbumsHeadersResponse": {
        "fields": {
          "headers": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            }
          },
          "response": {
            "type": {
              "element_type": {
                "name": "Album",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "GetAlbumsIdHeadersResponse": {
        "fields": {
          "headers": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            }
          },
          "response": {
            "type": {
              "name": "Album",
              "type": "named"
            }
          }
        }
      },
      "GetAlbumsIdPhotosHeadersResponse": {
        "fields": {
          "headers": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            }
          },
          "response": {
            "type": {
              "element_type": {
                "name": "Photo",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "GetCommentHeadersResponse": {
        "fields": {
          "headers": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            }
          },
          "response": {
            "type": {
              "name": "Comment",
              "type": "named"
            }
          }
        }
      },
      "GetCommentsHeadersResponse": {
        "fields": {
          "headers": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            }
          },
          "response": {
            "type": {
              "element_type": {
                "name": "Comment",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "GetPhotoHeadersResponse": {
        "fields": {
          "headers": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            }
          },
          "response": {
            "type": {
              "name": "Photo",
              "type": "named"
            }
          }
        }
      },
      "GetPhotosHeadersResponse": {
        "fields": {
          "headers": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            }
          },
          "response": {
            "type": {
              "element_type": {
                "name": "Photo",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "GetPostByIdHeadersResponse": {
        "fields": {
          "headers": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            }
          },
          "response": {
            "type": {
              "name": "Post",
              "type": "named"
            }
          }
        }
      },
      "GetPostsHeadersResponse": {
        "fields": {
          "headers": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            }
          },
          "response": {
            "type": {
              "element_type": {
                "name": "Post",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "GetPostsIdCommentsHeadersResponse": {
        "fields": {
          "headers": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            }
          },
          "response": {
            "type": {
              "element_type": {
                "name": "Comment",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "GetTodoHeadersResponse": {
        "fields": {
          "headers": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            }
          },
          "response": {
            "type": {
              "name": "Todo",
              "type": "named"
            }
          }
        }
      },
      "GetTodosHeadersResponse": {
        "fields": {
          "headers": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            }
          },
          "response": {
            "type": {
              "element_type": {
                "name": "Todo",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "GetUserHeadersResponse": {
        "fields": {
          "headers": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            }
          },
          "response": {
            "type": {
              "name": "User",
              "type": "named"
            }
          }
        }
      },
      "GetUsersHeadersResponse": {
        "fields": {
          "headers": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            }
          },
          "response": {
            "type": {
              "element_type": {
                "name": "User",
                "type": "named"
              },
              "type": "array"
            }
          }
        }
      },
      "PatchPostByIdHeadersResponse": {
        "fields": {
          "headers": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            }
          },
          "response": {
            "type": {
              "name": "Post",
              "type": "named"
            }
          }
        }
      },
      "Photo": {
        "fields": {
          "albumId": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ],
              "format": "int64"
            }
          },
          "id": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ],
              "format": "int64"
            }
          },
          "thumbnailUrl": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "URI",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ],
              "format": "uri"
            }
          },
          "title": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "url": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "URI",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ],
              "format": "uri"
            }
          }
        },
        "xml": {
          "name": "Photo"
        }
      },
      "Post": {
        "fields": {
          "body": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "id": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ],
              "format": "int64"
            }
          },
          "title": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "userId": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ],
              "format": "int64"
            }
          }
        },
        "xml": {
          "name": "Post"
        }
      },
      "Todo": {
        "fields": {
          "completed": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Boolean",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "boolean"
              ]
            }
          },
          "id": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ],
              "format": "int64"
            }
          },
          "title": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "userId": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ],
              "format": "int64"
            }
          }
        },
        "xml": {
          "name": "Todo"
        }
      },
      "UpdatePostByIdHeadersResponse": {
        "fields": {
          "headers": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            }
          },
          "response": {
            "type": {
              "name": "Post",
              "type": "named"
            }
          }
        }
      },
      "User": {
        "fields": {
          "address": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "UserAddress",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "object"
              ]
            }
          },
          "company": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "UserCompany",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "object"
              ]
            }
          },
          "email": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ],
              "format": "email"
            }
          },
          "id": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "Int64",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "integer"
              ],
              "format": "int64"
            }
          },
          "name": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "phone": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "username": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "website": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "UserAddress": {
        "fields": {
          "city": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "geo": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "UserAddressGeo",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "object"
              ]
            }
          },
          "street": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "suite": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "zipcode": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "UserAddressGeo": {
        "fields": {
          "lat": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "lng": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "UserCompany": {
        "fields": {
          "bs": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "catchPhrase": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          },
          "name": {
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "String",
                "type": "named"
              }
            },
            "http": {
              "type": [
                "string"
              ]
            }
          }
        },
        "xml": {
          "name": "User"
        }
      }
    },
    "procedures": {
      "createPost": {
        "request": {
          "url": "/posts",
          "method": "post",
          "requestBody": {
            "contentType": "application/json"
          },
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "body": {
            "description": "Post object that needs to be added",
            "type": {
              "name": "Post",
              "type": "named"
            },
            "http": {
              "in": "body",
              "schema": {
                "type": [
                  "object"
                ]
              }
            }
          },
          "headers": {
            "description": "Headers forwarded from the Hasura engine",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            }
          }
        },
        "description": "Create a post",
        "result_type": {
          "name": "CreatePostHeadersResponse",
          "type": "named"
        }
      },
      "deletePostById": {
        "request": {
          "url": "/posts/{id}",
          "method": "delete",
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "headers": {
            "description": "Headers forwarded from the Hasura engine",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            }
          },
          "id": {
            "description": "The ID of the post to retrieve",
            "type": {
              "name": "Int32",
              "type": "named"
            },
            "http": {
              "name": "id",
              "in": "path",
              "schema": {
                "type": [
                  "integer"
                ]
              }
            }
          }
        },
        "description": "Delete specific post",
        "result_type": {
          "name": "DeletePostByIdHeadersResponse",
          "type": "named"
        }
      },
      "patchPostById": {
        "request": {
          "url": "/posts/{id}",
          "method": "patch",
          "requestBody": {
            "contentType": "application/json"
          },
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "body": {
            "description": "Post object that needs to be updated",
            "type": {
              "name": "Post",
              "type": "named"
            },
            "http": {
              "in": "body",
              "schema": {
                "type": [
                  "object"
                ]
              }
            }
          },
          "headers": {
            "description": "Headers forwarded from the Hasura engine",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            }
          },
          "id": {
            "description": "The ID of the post to retrieve",
            "type": {
              "name": "Int32",
              "type": "named"
            },
            "http": {
              "name": "id",
              "in": "path",
              "schema": {
                "type": [
                  "integer"
                ]
              }
            }
          }
        },
        "description": "patch specific post",
        "result_type": {
          "name": "PatchPostByIdHeadersResponse",
          "type": "named"
        }
      },
      "updatePostById": {
        "request": {
          "url": "/posts/{id}",
          "method": "put",
          "requestBody": {
            "contentType": "application/json"
          },
          "response": {
            "contentType": "application/json"
          }
        },
        "arguments": {
          "body": {
            "description": "Post object that needs to be updated",
            "type": {
              "name": "Post",
              "type": "named"
            },
            "http": {
              "in": "body",
              "schema": {
                "type": [
                  "object"
                ]
              }
            }
          },
          "headers": {
            "description": "Headers forwarded from the Hasura engine",
            "type": {
              "type": "nullable",
              "underlying_type": {
                "name": "JSON",
                "type": "named"
              }
            }
          },
          "id": {
            "description": "The ID of the post to retrieve",
            "type": {
              "name": "Int32",
              "type": "named"
            },
            "http": {
              "name": "id",
              "in": "path",
              "schema": {
                "type": [
                  "integer"
                ]
              }
            }
          }
        },
        "description": "Update specific post",
        "result_type": {
          "name": "UpdatePostByIdHeadersResponse",
          "type": "named"
        }
      }
    },
    "scalar_types": {
      "Boolean": {
        "aggregate_functions": {},
        "comparison_operators": {},
        "representation": {
          "type": "boolean"
        }
      },
      "Int32": {
        "aggregate_functions": {},
        "comparison_operators": {},
        "representation": {
          "type": "int32"
        }
      },
      "Int64": {
        "aggregate_functions": {},
        "comparison_operators": {},
        "representation": {
          "type": "int64"
        }
      },
      "JSON": {
        "aggregate_functions": {},
        "comparison_operators": {},
        "representation": {
          "type": "json"
        }
      },
      "String": {
        "aggregate_functions": {},
        "comparison_operators": {},
        "representation": {
          "type": "string"
        }
      },
      "URI": {
        "aggregate_functions": {},
        "comparison_operators": {},
        "representation": {
          "type": "string"
        }
      }
    }
  }
]
